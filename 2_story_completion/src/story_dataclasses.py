from dataclasses import dataclass

import torch
import numpy as np
from typing import List, Dict, Union
from dataclasses import dataclass

@dataclass
class CommonsenseRelation:
	relation_type: str
	values: str ## relation sentences generated by COMET
	embeddings: Union[torch.tensor, np.array] ## relation sentences embedded with sentencetransformer

@dataclass
class StorySentence:
	idx: int
	value: str
	character: str
	sentence_type: str ## context, obstacle, other
	commonsense_relations: Dict[str, CommonsenseRelation]

@dataclass
class ConflictStory:
	num_sentences: int
	context_idx: int ## 0 - Usually S1
	obstacle_idx: int ## 2 - Ususally S3
	sentences: Dict[int, StorySentence] ## idx: sentence (0, 1, 2, 3, 4)